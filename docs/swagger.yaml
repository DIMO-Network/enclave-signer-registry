definitions:
  big.Int:
    type: object
  internal_app.DeveloperLicenseResponse:
    properties:
      clientId:
        type: string
      tokenId:
        type: string
    type: object
  internal_app.codeResp:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
  net.IPNet:
    properties:
      ip:
        description: network number
        items:
          type: integer
        type: array
      mask:
        description: network mask
        items:
          type: integer
        type: array
    type: object
  nitrite.Document:
    properties:
      cabundle:
        items:
          items:
            type: integer
          type: array
        type: array
      certificate:
        items:
          type: integer
        type: array
      digest:
        type: string
      module_id:
        type: string
      nonce:
        items:
          type: integer
        type: array
      pcrs:
        additionalProperties:
          items:
            type: integer
          type: array
        type: object
      public_key:
        items:
          type: integer
        type: array
      timestamp:
        type: integer
      user_data:
        items:
          type: integer
        type: array
    type: object
  nitrite.Result:
    properties:
      certificates:
        description: Certificates contains all of the certificates except the root.
        items:
          $ref: '#/definitions/x509.Certificate'
        type: array
      cose_sign1:
        description: |-
          COSESign1 contains the COSE Signature Structure which was used to
          calculate the `Signature`.
        items:
          type: integer
        type: array
      document:
        allOf:
        - $ref: '#/definitions/nitrite.Document'
        description: Document contains the attestation document.
      payload:
        description: Payload section from the COSE Sign1 payload.
        items:
          type: integer
        type: array
      protected:
        description: Protected section from the COSE Sign1 payload.
        items:
          type: integer
        type: array
      signature:
        description: Signature section from the COSE Sign1 payload.
        items:
          type: integer
        type: array
      signature_ok:
        description: |-
          SignatureOK designates if the signature was OK (but certificate could be
          invalid, not trusted, expired, etc.)
        type: boolean
      unprotected:
        description: Unprotected section from the COSE Sign1 payload.
        items:
          type: integer
        type: array
    type: object
  pkix.AttributeTypeAndValue:
    properties:
      type:
        items:
          type: integer
        type: array
      value: {}
    type: object
  pkix.Extension:
    properties:
      critical:
        type: boolean
      id:
        items:
          type: integer
        type: array
      value:
        items:
          type: integer
        type: array
    type: object
  pkix.Name:
    properties:
      commonName:
        type: string
      country:
        items:
          type: string
        type: array
      extraNames:
        description: |-
          ExtraNames contains attributes to be copied, raw, into any marshaled
          distinguished names. Values override any attributes with the same OID.
          The ExtraNames field is not populated when parsing, see Names.
        items:
          $ref: '#/definitions/pkix.AttributeTypeAndValue'
        type: array
      locality:
        items:
          type: string
        type: array
      names:
        description: |-
          Names contains all parsed attributes. When parsing distinguished names,
          this can be used to extract non-standard attributes that are not parsed
          by this package. When marshaling to RDNSequences, the Names field is
          ignored, see ExtraNames.
        items:
          $ref: '#/definitions/pkix.AttributeTypeAndValue'
        type: array
      organization:
        items:
          type: string
        type: array
      organizationalUnit:
        items:
          type: string
        type: array
      postalCode:
        items:
          type: string
        type: array
      province:
        items:
          type: string
        type: array
      serialNumber:
        type: string
      streetAddress:
        items:
          type: string
        type: array
    type: object
  url.URL:
    properties:
      forceQuery:
        description: append a query ('?') even if RawQuery is empty
        type: boolean
      fragment:
        description: fragment for references, without '#'
        type: string
      host:
        description: host or host:port (see Hostname and Port methods)
        type: string
      omitHost:
        description: do not emit empty host (authority)
        type: boolean
      opaque:
        description: encoded opaque data
        type: string
      path:
        description: path (relative paths may omit leading slash)
        type: string
      rawFragment:
        description: encoded fragment hint (see EscapedFragment method)
        type: string
      rawPath:
        description: encoded path hint (see EscapedPath method)
        type: string
      rawQuery:
        description: encoded query values, without '?'
        type: string
      scheme:
        type: string
      user:
        allOf:
        - $ref: '#/definitions/url.Userinfo'
        description: username and password information
    type: object
  url.Userinfo:
    type: object
  x509.Certificate:
    properties:
      authorityKeyId:
        items:
          type: integer
        type: array
      basicConstraintsValid:
        description: |-
          BasicConstraintsValid indicates whether IsCA, MaxPathLen,
          and MaxPathLenZero are valid.
        type: boolean
      crldistributionPoints:
        description: CRL Distribution Points
        items:
          type: string
        type: array
      dnsnames:
        description: |-
          Subject Alternate Name values. (Note that these values may not be valid
          if invalid values were contained within a parsed certificate. For
          example, an element of DNSNames may not be a valid DNS domain name.)
        items:
          type: string
        type: array
      emailAddresses:
        items:
          type: string
        type: array
      excludedDNSDomains:
        items:
          type: string
        type: array
      excludedEmailAddresses:
        items:
          type: string
        type: array
      excludedIPRanges:
        items:
          $ref: '#/definitions/net.IPNet'
        type: array
      excludedURIDomains:
        items:
          type: string
        type: array
      extKeyUsage:
        description: Sequence of extended key usages.
        items:
          $ref: '#/definitions/x509.ExtKeyUsage'
        type: array
      extensions:
        description: |-
          Extensions contains raw X.509 extensions. When parsing certificates,
          this can be used to extract non-critical extensions that are not
          parsed by this package. When marshaling certificates, the Extensions
          field is ignored, see ExtraExtensions.
        items:
          $ref: '#/definitions/pkix.Extension'
        type: array
      extraExtensions:
        description: |-
          ExtraExtensions contains extensions to be copied, raw, into any
          marshaled certificates. Values override any extensions that would
          otherwise be produced based on the other fields. The ExtraExtensions
          field is not populated when parsing certificates, see Extensions.
        items:
          $ref: '#/definitions/pkix.Extension'
        type: array
      inhibitAnyPolicy:
        description: |-
          InhibitAnyPolicy and InhibitAnyPolicyZero indicate the presence and value
          of the inhibitAnyPolicy extension.

          The value of InhibitAnyPolicy indicates the number of additional
          certificates in the path after this certificate that may use the
          anyPolicy policy OID to indicate a match with any other policy.

          When parsing a certificate, a positive non-zero InhibitAnyPolicy means
          that the field was specified, -1 means it was unset, and
          InhibitAnyPolicyZero being true mean that the field was explicitly set to
          zero. The case of InhibitAnyPolicy==0 with InhibitAnyPolicyZero==false
          should be treated equivalent to -1 (unset).
        type: integer
      inhibitAnyPolicyZero:
        description: |-
          InhibitAnyPolicyZero indicates that InhibitAnyPolicy==0 should be
          interpreted as an actual maximum path length of zero. Otherwise, that
          combination is interpreted as InhibitAnyPolicy not being set.
        type: boolean
      inhibitPolicyMapping:
        description: |-
          InhibitPolicyMapping and InhibitPolicyMappingZero indicate the presence
          and value of the inhibitPolicyMapping field of the policyConstraints
          extension.

          The value of InhibitPolicyMapping indicates the number of additional
          certificates in the path after this certificate that may use policy
          mapping.

          When parsing a certificate, a positive non-zero InhibitPolicyMapping
          means that the field was specified, -1 means it was unset, and
          InhibitPolicyMappingZero being true mean that the field was explicitly
          set to zero. The case of InhibitPolicyMapping==0 with
          InhibitPolicyMappingZero==false should be treated equivalent to -1
          (unset).
        type: integer
      inhibitPolicyMappingZero:
        description: |-
          InhibitPolicyMappingZero indicates that InhibitPolicyMapping==0 should be
          interpreted as an actual maximum path length of zero. Otherwise, that
          combination is interpreted as InhibitAnyPolicy not being set.
        type: boolean
      ipaddresses:
        items:
          items:
            type: integer
          type: array
        type: array
      isCA:
        type: boolean
      issuer:
        $ref: '#/definitions/pkix.Name'
      issuingCertificateURL:
        items:
          type: string
        type: array
      keyUsage:
        $ref: '#/definitions/x509.KeyUsage'
      maxPathLen:
        description: |-
          MaxPathLen and MaxPathLenZero indicate the presence and
          value of the BasicConstraints' "pathLenConstraint".

          When parsing a certificate, a positive non-zero MaxPathLen
          means that the field was specified, -1 means it was unset,
          and MaxPathLenZero being true mean that the field was
          explicitly set to zero. The case of MaxPathLen==0 with MaxPathLenZero==false
          should be treated equivalent to -1 (unset).

          When generating a certificate, an unset pathLenConstraint
          can be requested with either MaxPathLen == -1 or using the
          zero value for both MaxPathLen and MaxPathLenZero.
        type: integer
      maxPathLenZero:
        description: |-
          MaxPathLenZero indicates that BasicConstraintsValid==true
          and MaxPathLen==0 should be interpreted as an actual
          maximum path length of zero. Otherwise, that combination is
          interpreted as MaxPathLen not being set.
        type: boolean
      notAfter:
        description: Validity bounds.
        type: string
      notBefore:
        description: Validity bounds.
        type: string
      ocspserver:
        description: RFC 5280, 4.2.2.1 (Authority Information Access)
        items:
          type: string
        type: array
      permittedDNSDomains:
        items:
          type: string
        type: array
      permittedDNSDomainsCritical:
        description: Name constraints
        type: boolean
      permittedEmailAddresses:
        items:
          type: string
        type: array
      permittedIPRanges:
        items:
          $ref: '#/definitions/net.IPNet'
        type: array
      permittedURIDomains:
        items:
          type: string
        type: array
      policies:
        description: |-
          Policies contains all policy identifiers included in the certificate.
          See CreateCertificate for context about how this field and the PolicyIdentifiers field
          interact.
          In Go 1.22, encoding/gob cannot handle and ignores this field.
        items:
          $ref: '#/definitions/x509.OID'
        type: array
      policyIdentifiers:
        description: |-
          PolicyIdentifiers contains asn1.ObjectIdentifiers, the components
          of which are limited to int32. If a certificate contains a policy which
          cannot be represented by asn1.ObjectIdentifier, it will not be included in
          PolicyIdentifiers, but will be present in Policies, which contains all parsed
          policy OIDs.
          See CreateCertificate for context about how this field and the Policies field
          interact.
        items:
          items:
            type: integer
          type: array
        type: array
      policyMappings:
        description: PolicyMappings contains a list of policy mappings included in
          the certificate.
        items:
          $ref: '#/definitions/x509.PolicyMapping'
        type: array
      publicKey: {}
      publicKeyAlgorithm:
        $ref: '#/definitions/x509.PublicKeyAlgorithm'
      raw:
        description: Complete ASN.1 DER content (certificate, signature algorithm
          and signature).
        items:
          type: integer
        type: array
      rawIssuer:
        description: DER encoded Issuer
        items:
          type: integer
        type: array
      rawSubject:
        description: DER encoded Subject
        items:
          type: integer
        type: array
      rawSubjectPublicKeyInfo:
        description: DER encoded SubjectPublicKeyInfo.
        items:
          type: integer
        type: array
      rawTBSCertificate:
        description: Certificate part of raw ASN.1 DER content.
        items:
          type: integer
        type: array
      requireExplicitPolicy:
        description: |-
          RequireExplicitPolicy and RequireExplicitPolicyZero indicate the presence
          and value of the requireExplicitPolicy field of the policyConstraints
          extension.

          The value of RequireExplicitPolicy indicates the number of additional
          certificates in the path after this certificate before an explicit policy
          is required for the rest of the path. When an explicit policy is required,
          each subsequent certificate in the path must contain a required policy OID,
          or a policy OID which has been declared as equivalent through the policy
          mapping extension.

          When parsing a certificate, a positive non-zero RequireExplicitPolicy
          means that the field was specified, -1 means it was unset, and
          RequireExplicitPolicyZero being true mean that the field was explicitly
          set to zero. The case of RequireExplicitPolicy==0 with
          RequireExplicitPolicyZero==false should be treated equivalent to -1
          (unset).
        type: integer
      requireExplicitPolicyZero:
        description: |-
          RequireExplicitPolicyZero indicates that RequireExplicitPolicy==0 should be
          interpreted as an actual maximum path length of zero. Otherwise, that
          combination is interpreted as InhibitAnyPolicy not being set.
        type: boolean
      serialNumber:
        $ref: '#/definitions/big.Int'
      signature:
        items:
          type: integer
        type: array
      signatureAlgorithm:
        $ref: '#/definitions/x509.SignatureAlgorithm'
      subject:
        $ref: '#/definitions/pkix.Name'
      subjectKeyId:
        items:
          type: integer
        type: array
      unhandledCriticalExtensions:
        description: |-
          UnhandledCriticalExtensions contains a list of extension IDs that
          were not (fully) processed when parsing. Verify will fail if this
          slice is non-empty, unless verification is delegated to an OS
          library which understands all the critical extensions.

          Users can access these extensions using Extensions and can remove
          elements from this slice if they believe that they have been
          handled.
        items:
          items:
            type: integer
          type: array
        type: array
      unknownExtKeyUsage:
        description: Encountered extended key usages unknown to this package.
        items:
          items:
            type: integer
          type: array
        type: array
      uris:
        items:
          $ref: '#/definitions/url.URL'
        type: array
      version:
        type: integer
    type: object
  x509.ExtKeyUsage:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    type: integer
    x-enum-varnames:
    - ExtKeyUsageAny
    - ExtKeyUsageServerAuth
    - ExtKeyUsageClientAuth
    - ExtKeyUsageCodeSigning
    - ExtKeyUsageEmailProtection
    - ExtKeyUsageIPSECEndSystem
    - ExtKeyUsageIPSECTunnel
    - ExtKeyUsageIPSECUser
    - ExtKeyUsageTimeStamping
    - ExtKeyUsageOCSPSigning
    - ExtKeyUsageMicrosoftServerGatedCrypto
    - ExtKeyUsageNetscapeServerGatedCrypto
    - ExtKeyUsageMicrosoftCommercialCodeSigning
    - ExtKeyUsageMicrosoftKernelCodeSigning
  x509.KeyUsage:
    enum:
    - 1
    - 2
    - 4
    - 8
    - 16
    - 32
    - 64
    - 128
    - 256
    type: integer
    x-enum-varnames:
    - KeyUsageDigitalSignature
    - KeyUsageContentCommitment
    - KeyUsageKeyEncipherment
    - KeyUsageDataEncipherment
    - KeyUsageKeyAgreement
    - KeyUsageCertSign
    - KeyUsageCRLSign
    - KeyUsageEncipherOnly
    - KeyUsageDecipherOnly
  x509.OID:
    type: object
  x509.PolicyMapping:
    properties:
      issuerDomainPolicy:
        allOf:
        - $ref: '#/definitions/x509.OID'
        description: |-
          IssuerDomainPolicy contains a policy OID the issuing certificate considers
          equivalent to SubjectDomainPolicy in the subject certificate.
      subjectDomainPolicy:
        allOf:
        - $ref: '#/definitions/x509.OID'
        description: |-
          SubjectDomainPolicy contains a OID the issuing certificate considers
          equivalent to IssuerDomainPolicy in the subject certificate.
    type: object
  x509.PublicKeyAlgorithm:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    type: integer
    x-enum-comments:
      DSA: Only supported for parsing.
    x-enum-varnames:
    - UnknownPublicKeyAlgorithm
    - RSA
    - DSA
    - ECDSA
    - Ed25519
  x509.SignatureAlgorithm:
    enum:
    - 0
    - 1
    - 2
    - 3
    - 4
    - 5
    - 6
    - 7
    - 8
    - 9
    - 10
    - 11
    - 12
    - 13
    - 14
    - 15
    - 16
    type: integer
    x-enum-comments:
      DSAWithSHA1: Unsupported.
      DSAWithSHA256: Unsupported.
      ECDSAWithSHA1: Only supported for signing, and verification of CRLs, CSRs, and
        OCSP responses.
      MD2WithRSA: Unsupported.
      MD5WithRSA: Only supported for signing, not verification.
      SHA1WithRSA: Only supported for signing, and verification of CRLs, CSRs, and
        OCSP responses.
    x-enum-varnames:
    - UnknownSignatureAlgorithm
    - MD2WithRSA
    - MD5WithRSA
    - SHA1WithRSA
    - SHA256WithRSA
    - SHA384WithRSA
    - SHA512WithRSA
    - DSAWithSHA1
    - DSAWithSHA256
    - ECDSAWithSHA1
    - ECDSAWithSHA256
    - ECDSAWithSHA384
    - ECDSAWithSHA512
    - SHA256WithRSAPSS
    - SHA384WithRSAPSS
    - SHA512WithRSAPSS
    - PureEd25519
info:
  contact: {}
  description: This is the API documentation for the Enclave Signer Registry service
  title: Enclave Signer Registry
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /.well-known/nsm-attestation:
    get:
      consumes:
      - application/json
      description: Get the Nitro Security Module attestation
      parameters:
      - description: Optional nonce for attestation
        in: query
        name: nonce
        type: string
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/nitrite.Result'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_app.codeResp'
      summary: Get NSM attestation
      tags:
      - attestation
  /Developer-license:
    get:
      consumes:
      - application/json
      description: Get the developer license of the controller
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.DeveloperLicenseResponse'
      summary: Get developer license
      tags:
      - keys
  /signer:
    post:
      consumes:
      - application/json
      description: Add a new signer by verifying their NSM attestation
      parameters:
      - description: NSM attestation document
        in: body
        name: attestation
        required: true
        schema:
          $ref: '#/definitions/nitrite.Result'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.codeResp'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_app.codeResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_app.codeResp'
      summary: Add a new signer
      tags:
      - signer
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
