definitions:
  github_com_DIMO-Network_enclave-signer-registry_internal_config.PCRValues:
    properties:
      pcr0:
        items:
          type: integer
        type: array
      pcr1:
        items:
          type: integer
        type: array
      pcr2:
        items:
          type: integer
        type: array
    type: object
  internal_app.AddSignerRequest:
    properties:
      attestationDocument:
        items:
          type: integer
        type: array
      signerAddress:
        type: string
    type: object
  internal_app.AddSignerResponse:
    properties:
      alreadyAdded:
        type: boolean
      txHash:
        type: string
    type: object
  internal_app.DeveloperLicenseResponse:
    properties:
      clientId:
        type: string
      tokenId:
        type: string
      validPCRs:
        items:
          $ref: '#/definitions/github_com_DIMO-Network_enclave-signer-registry_internal_config.PCRValues'
        type: array
    type: object
  internal_app.codeResp:
    properties:
      code:
        type: integer
      message:
        type: string
    type: object
info:
  contact: {}
  description: This is the API documentation for the Enclave Signer Registry service
  title: Enclave Signer Registry
  version: "1.0"
paths:
  /:
    get:
      consumes:
      - '*/*'
      description: get the status of server.
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            additionalProperties: true
            type: object
      summary: Show the status of server.
      tags:
      - root
  /Developer-license:
    get:
      consumes:
      - application/json
      description: Get the developer license of the controller
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.DeveloperLicenseResponse'
      summary: Get developer license
      tags:
      - keys
  /add-signer:
    post:
      consumes:
      - application/json
      description: Add a new signer by verifying their NSM attestation
      parameters:
      - description: NSM attestation document
        in: body
        name: attestation
        required: true
        schema:
          $ref: '#/definitions/internal_app.AddSignerRequest'
      produces:
      - application/json
      responses:
        "200":
          description: OK
          schema:
            $ref: '#/definitions/internal_app.AddSignerResponse'
        "400":
          description: Bad Request
          schema:
            $ref: '#/definitions/internal_app.codeResp'
        "500":
          description: Internal Server Error
          schema:
            $ref: '#/definitions/internal_app.codeResp'
      summary: Add a new signer
      tags:
      - signer
securityDefinitions:
  BearerAuth:
    in: header
    name: Authorization
    type: apiKey
swagger: "2.0"
