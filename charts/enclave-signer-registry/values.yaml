replicaCount: 1
imagePullSecrets: []
nameOverride: ''
fullnameOverride: ''
podAnnotations: {}
podSecurityContext: {}
bridge:
  image:
    repository: dimozone/enclave-bridge
    pullPolicy: IfNotPresent
    tag: 3a7e68f
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  env:
    LOG_LEVEL: TRACE
    PORT: '8080'
    MON_PORT: '8888'
    VSOCK_INIT_PORT: '5000'
    DEV_LICENSE_CONTRACT: '0x9A9D2E717bB005B240094ba761Ff074d392C7C85'
    DEVELOPER_LICENSE: '0x332b18C8d30970FEc524b9f94091AD81d7C13EfD'
    CHAIN_ID: '137'
    TLS_ENABLED: false
    TLS_ACME_HOST_NAME: enclave-signer-registry.dev.dimo.zone
    TLS_ACME_CA_DIR_URL: https://acme-staging-v02.api.letsencrypt.org/directory
    TLS_ACME_EMAIL: ''
    PCRS_0_PCR0: '0xeb1da05b66ad4e1f77a13bf96b094aedbe8c57ea71952f669e1d76dbbe5137ea7bd4e290e292b07d572b86434f9a6f8c'
    PCRS_0_PCR1: '0xfa2593b59f3e4fc7daba5cbdddfd3449d67cd02d43bb1128885e8f38b914d081dccdb68fff6d5b7a76bcb866a18a74a3'
    PCRS_0_PCR2: '0x766e81ef2eaac991280ed0da1756d4400d28d4b421c37bf4722d92e7bd4cc9ff4e8fedcdad5846a1bc4894dbe8bb4fb5'
    PCRS_1_PCR0: '0xaabaae3f0f212d9156449a9ab3d04ca0c7d35987f136e2d0efc4e16af0bcbf3a93c54a40122c05a44992d3d7bb27897d'
    PCRS_1_PCR1: '0xfa2593b59f3e4fc7daba5cbdddfd3449d67cd02d43bb1128885e8f38b914d081dccdb68fff6d5b7a76bcb866a18a74a3'
    PCRS_1_PCR2: '0xd40e92ddf0a7f1a4e15f89eaa3d660a6412a5b858397aa29902513246571338992ccc19ef12c546ed98056d58d64f73f'
    PCRS_2_PCR0: '0x691f9077396cce7ea5cf85a95bdeef8606286067925633c65e20776e55078b49797e66ef4f262d8bf20c5941fce8ab23'
    PCRS_2_PCR1: '0xfa2593b59f3e4fc7daba5cbdddfd3449d67cd02d43bb1128885e8f38b914d081dccdb68fff6d5b7a76bcb866a18a74a3'
    PCRS_2_PCR2: '0x3af67175a4957e2fbd980e8f0d1885b95ff7a29f1863a38e1b13d6044f9a0881e37806a37a702203812ceeb75f2313dd'
  ports:
    - name: mon-http
      containerPort: 8888
      protocol: TCP
      identities:
        - mon-kube-prometheus-stack-prometheus.mon.serviceaccount.identity.linkerd.cluster.local
    - name: http
      containerPort: 8080
      protocol: TCP
      identities:
        - dev.serviceaccount.identity.linkerd.cluster.local
        - ingress-ingress-nginx.ingress.serviceaccount.identity.linkerd.cluster.local
  resources:
    limits:
      cpu: 250m
      memory: 512Mi
    requests:
      cpu: 100m
      memory: 256Mi
  linkerd:
    enabled: false
app:
  image:
    repository: dimozone/enclave-signer-registry
    pullPolicy: IfNotPresent
    tag: eec08ef
  securityContext:
    allowPrivilegeEscalation: false
    capabilities:
      drop:
        - all
  env:
    ENCLAVE_CPU_COUNT: '2'
    ENCLAVE_MEMORY_SIZE: '1000'
    ENCLAVE_CID: '16'
    ENCLAVE_DEBUG_MODE: null
  ports: null
  resources:
    limits:
      aws.ec2.nitro/nitro_enclaves: '1'
      hugepages-1Gi: 1Gi
      memory: 512Mi
      cpu: 500m
    requests:
      aws.ec2.nitro/nitro_enclaves: '1'
      hugepages-1Gi: 1Gi
      memory: 128Mi
      cpu: 100m
service:
  type: ClusterIP
  ports:
    mon-http:
      port: 8888
      targetPort: mon-http
      protocol: TCP
    http:
      port: 80
      targetPort: http
      protocol: TCP
ingress:
  enabled: true
  className: nginx
  annotations:
    nginx.ingress.kubernetes.io/auth-tls-secret: ingress/cf-origin-ca
    nginx.ingress.kubernetes.io/auth-tls-verify-client: 'on'
    external-dns.alpha.kubernetes.io/cloudflare-proxied: 'true'
    nginx.ingress.kubernetes.io/backend-protocol: HTTP
    nginx.ingress.kubernetes.io/ssl-passthrough: 'false'
    nginx.ingress.kubernetes.io/proxy-read-timeout: 360s
    nginx.ingress.kubernetes.io/proxy-send-timeout: 360s
    nginx.ingress.kubernetes.io/limit-rps: '50'
    external-dns.alpha.kubernetes.io/hostname: enclave-signer-registry.dev.dimo.zone
  hosts:
    - host: enclave-signer-registry.dev.dimo.zone
      paths:
        - path: /
          pathType: ImplementationSpecific
  tls: []
autoscaling:
  enabled: false
  minReplicas: 1
  maxReplicas: 100
  targetCPUUtilizationPercentage: 80
nodeSelector:
  enclave: 'true'
affinity: {}
podDisruptionBudget:
  minAvailable: 0
kafka:
  clusterName: kafka-dev-dimo-kafka
  topics: []
serviceAccount:
  create: true
  annotations: {}
  name: ''
serviceMonitor:
  enabled: true
  path: /metrics
  port: mon-http
  interval: 30s
secrets:
  enabled: true
